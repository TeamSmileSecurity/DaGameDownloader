<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP+ioQD/o6IE/6WkCP+ioQD/oqEA/6KhAP+ioQD/oqEA/6WkAP+6uQD/ycgAssrJAN3KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/JyAD/09Iu/+/vs//+/vv/7OzL//f36P/39+j/7OzL//3+
        +//j47L/srIu/6GgAP+ioQD/oqEA/6KhAP+ioQD/oqEA/6KhAP+lpAD/vLsA/8rJAP/KyQDdyskA9crJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/y8oG/93cW//4+Nz/+/v2/93dj//Hxij/9PTP/+3t
        z/+wsCj/1taP//z89v/y8tz/w8Ja/6SjBv+ioQD/oqEA/6KhAP+ioQD/pqUA/728AP/KyQD/yskA/8rJ
        APXKyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/h4XH//f34//b23f/W1Vv/xsUF/83M
        D//29tD/7u3Q/6emD/+jogX/w8Nb//Py3f/8/Pj/y8pw/6GgAP+ioQD/oqEA/6emAP+/vgD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/+DfaP/s7Kb/0tEw/8nI
        AP/KyQD/zcwQ//b20P/t7dD/qKcQ/6GgAP+hoAD/s7Iw/97epv/HxmX/oqEA/6KhAP+opwD/wL8A/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA9crJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskD/8vK
        Bf/KyQD/yskA/8rJAP/NzBD/9vbQ/+3t0P+opxD/oqEA/6KhAP+hoAD/o6IF/6OiA/+hoAD/qagA/8HA
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAPXKyQDdyskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/83MEP/29tD/7e3Q/6inEP+ioQD/oqEA/6KhAP+ioQD/oqEA/6uq
        AP/DwgD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA3crJALLKyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/zcwQ//b20P/t7dD/qKcQ/6KhAP+ioQD/oqEA/6Kh
        AP+sqwD/xMMA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQCyyskAcsrJAPzKyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/NzBD/9vbQ/+3t0P+opxD/oqEA/6Kh
        AP+ioQD/rawA/8XEAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/MrJAHLKyQAuyskA4crJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/83MEP/29tD/7e3Q/6in
        EP+ioQD/oqEA/6+uAP/GxQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQDhyskALsrJ
        AATKyQCcyskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/zcwQ//b2
        0P/t7dD/qKcQ/6KhAP+wrwD/x8YA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AJzKyQAEyskAAMrJADzKyQDsyskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/NzBD/9vbQ/+3t0P+opxD/srEA/8fGAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQDsyskAPMrJAADKyQAAyskAA8rJAI/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/83MDv/19Mv/7ezL/7m4Dv/IxwD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAI/KyQADyskAAAAAAADKyQAAyskAHsrJAMbKyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskC/9rZSv/X10r/ycgC/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQDGyskAHsrJAAAAAAAAAAAAAMrJAADKyQAAyskAOsrJANzKyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/ycgA/8nIAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA3MrJADrKyQAAyskAAAAAAAAAAAAAAAAAAMrJAADKyQAAyskARsrJ
        AN3KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAN3KyQBGyskAAMrJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrJ
        AADKyQAAyskAOsrJAMfKyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQDHyskAOsrJAADKyQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMrJAADKyQAAyskAHcrJAI/KyQDsyskA/8rJAP/KyQD/yskA/8rJAP/KyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAP/KyQDsyskAj8rJAB3KyQAAyskAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKyQAAyskABMrJADvKyQCcyskA4srJAPzKyQD/yskA/8rJ
        AP/KyQD/yskA/8rJAP/KyQD/yskA/8rJAPzKyQDiyskAnMrJADvKyQAEyskAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyskAAMrJAAXKyQAtyskAcsrJ
        ALLKyQDdyskA9srJAP/KyQD/yskA9srJAN3KyQCyyskAcsrJAC3KyQAFyskAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAH/AAAA/gAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>